name: CI/CD to AWS EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 소스 체크아웃
        uses: actions/checkout@v3

      - name: JDK 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle 빌드
        run: ./gradlew build -x test

      - name: Docker 로그인
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker 이미지 빌드 및 푸시
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-app:$GITHUB_SHA .
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-app:$GITHUB_SHA

      - name: EC2 SSH 접속 후 배포
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/spring-app:$GITHUB_SHA
            docker stop spring-app || true
            docker rm spring-app || true
            docker run -d -p 80:8080 --name spring-app ${{ secrets.DOCKER_USERNAME }}/spring-app:$GITHUB_SHA

      - name: Slack 알림 전송
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "✅ AWS EC2에 자동배포 완료! SHA: $GITHUB_SHA"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
