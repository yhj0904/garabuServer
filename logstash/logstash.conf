input {
  # TCP input for Spring Boot logs
  tcp {
    port => 5000
    codec => json_lines
    type => "spring-boot"
  }
  
  # Beats input
  beats {
    port => 5044
    type => "filebeat"
  }

  # File input for direct log monitoring
  file {
    path => "/usr/share/logstash/logs/*.log"
    start_position => "beginning"
    type => "application-log"
    codec => multiline {
      pattern => "^%{TIMESTAMP_ISO8601}"
      negate => true
      what => "previous"
    }
  }
}

filter {
  # Parse timestamp
  if [type] == "spring-boot" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    
    # Extract log level
    if [level] {
      mutate {
        add_field => { "log_level" => "%{level}" }
      }
    }
  }
  
  # Parse application logs
  if [type] == "application-log" {
    grok {
      match => {
        "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} \[%{DATA:thread}\] %{DATA:logger} : %{GREEDYDATA:log_message}"
      }
    }
    
    date {
      match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSS" ]
    }
  }
  
  # Tag SQL queries
  if [logger_name] =~ "org.hibernate.SQL" {
    mutate {
      add_tag => ["sql"]
    }
  }
  
  # Prepare Slack notification for ERROR logs
  if [level] == "ERROR" or [log_level] == "ERROR" {
    mutate {
      add_field => {
        "alert_type" => "error"
        "slack_notification" => "true"
      }
    }
    
    # Create Slack message
    ruby {
      code => '
        logger = event.get("logger") || event.get("logger_name") || "Unknown"
        message = event.get("message") || event.get("log_message") || "No message"
        thread = event.get("thread") || "Unknown"
        timestamp = event.get("@timestamp").to_s
        
        slack_text = "ğŸš¨ *ERROR in Garabu Server*\n" +
                     "*Logger:* `#{logger}`\n" +
                     "*Message:* ```#{message[0..500]}```\n" +
                     "*Thread:* #{thread}\n" +
                     "*Time:* #{timestamp}"
        
        event.set("slack_message", slack_text)
      '
    }
  }
  
  # Add metadata
  mutate {
    add_field => {
      "environment" => "${SPRING_PROFILES_ACTIVE:production}"
      "app_name" => "garabu-server"
      "hostname" => "%{host}"
    }
  }
}

output {
  # Output to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "garabu-%{type}-%{+YYYY.MM.dd}"
  }
  
  # Send ERROR logs to Slack webhook
  if [slack_notification] == "true" {
    http {
      url => "${SLACK_WEBHOOK_URL:https://hooks.slack.com/services/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}"
      http_method => "post"
      format => "json"
      headers => {
        "Content-Type" => "application/json"
      }
      mapping => {
        "text" => "%{slack_message}"
        "channel" => "#garabu-alerts"
        "username" => "Garabu Log Monitor"
        "icon_emoji" => ":rotating_light:"
      }
    }
  }
  
  # Debug output (disable in production)
  stdout {
    codec => rubydebug
  }
}